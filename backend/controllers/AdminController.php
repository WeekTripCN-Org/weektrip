<?php

namespace backend\controllers;

use backend\models\Admin;
use Yii;
use backend\models\search\AdminSearch;

/**
 * Class AdminController
 *
 * @package \backend\controllers
 */
class AdminController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $this->setForward();
        $searchMmodel = new AdminSearch();
        $dataProvider = $searchMmodel->search(Yii::$app->request->queryParams);
        return $this->render('index', [
            'searchModel' => $searchMmodel,
            'dataProvider'=> $dataProvider,
        ]);
    }

    /**
     * @return string
     * 添加
     */
    public function actionAdd()
    {
        $model = new Admin();
        if (Yii::$app->request->isPost) {
            $data = Yii::$app->request->post('Admin');
            $data['reg_time']   = time();
            $data['reg_ip']     = ip2long(Yii::$app->request->getUserIP());
            $data['last_login_time']    = 0;
            $data['last_login_ip']      = ip2long('127.0.0.1');
            $data['update_time']        = 0;
            $model->setAttributes($data);
            $model->generateAuthKey();
            $model->setPassword($data['password']);

            if ($model->save()) {
                $this->success('操作成功', $this->getForward());
            } else {
                $this->error('操作错误');
            }
        }
        return $this->render('add', ['model' => $model]);
    }

    /**
     * @param $uid
     * @return string
     * 更新
     */
    public function actionEdit($uid)
    {
        $model = Admin::findOne($uid);
        if (Yii::$app->request->isPost) {
            $data = Yii::$app->request->post('Admin');
            $data['update_time'] = time();
            // 如果设置密码则重置密码
            if (!empty($data['password'])) {
                $model->generateAuthKey();
                $model->setPassword($data['password']);
            }
            unset($data['password']);

            $model->setAttributes($data);
            if ($model->save()) {
                $this->success('操作成功', $this->getForward());
            } else {
                $this->error('操作错误');
            }
        }

        $model->password = '';
        return $this->render('edit', ['model' => $model]);
    }

    /**
     * 删除用户
     */
    public function actionDelete()
    {
        $ids = Yii::$app->request->param('id', 0);
        $ids = implode(',', array_unique((array)$ids));

        if (empty($ids)) {
            $this->error('请选择要操作的数据！');
        }
        if (in_array(Yii::$app->params['admin'], explode(',', $ids))) {
            $this->error('不能删除超级管理员！');
        }
        $_where = ' uid in ('.$ids.')';
        if (Admin::deleteAll($_where)) {
            $this->success('删除成功', $this->getForward());
        } else {
            $this->error('删除失败!');
        }
    }

    /**
     * @param $uid
     * @return string
     * 用户授权
     */
    public function actionAuth($uid)
    {
        $auth = Yii::$app->authManager;
        $model = Admin::findOne($uid);

        if (Yii::$app->request->isPost) {
            $data = Yii::$app->request->post();
            // 用户权限组
            $item_name = $data['param'];
            // 先删除 用户组-用户 记录
            $auth->revokeAll($uid);
            // 再添加记录
            $role = $auth->getRole($item_name);
            $auth->assign($role, $uid);

            $this->success('授权成功！', $this->getForward());
            var_dump($data['param']);
            exit();
        }
        // 获取所有权限组
        $roles = $auth->getRoles();
        // 获取该用户的权限
        $group = array_keys($auth->getAssignments($uid));

        return $this->render('auth', [
            'model' => $model,
            'roles' => $roles,
            'group' => $group
        ]);
    }
}